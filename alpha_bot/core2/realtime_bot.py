from yolo_detector import grab_screen, detect_objects
from alpha_bot.core2.esp_control import send
import time

MODEL_PATH = r"/mob_detector/yolov8n_mob22/weights/best.pt"
COM_PORT = "COM6"
BAUD_RATE = 115200
TARGET_CLASS = 'mob'
HP_BAR_CLASS = 'target_HP'
MY_HP_CLASS = 'my_HP'

# –¶–µ–Ω—Ç—Ä –µ–∫—Ä–∞–Ω—É ‚Äî —â–æ–± –ø—Ä–∏—Ü—ñ–ª–∏—Ç–∏—Å—å –º–∏—à–∫–æ—é
SCREEN_CENTER_X = 960
SCREEN_CENTER_Y = 540

def send_command(ser, command):
    try:
        ser.write((command + '\n').encode())
        print(f"‚úÖ Sent: {command}")
        time.sleep(0.1)
    except Exception as e:
        print(f"‚ùå Send error: {e}")

def get_center(box):
    x1, y1, x2, y2 = box
    return int((x1 + x2) / 2), int((y1 + y2) / 2)

def is_my_hp_low(results):
    for box, cls in zip(results.boxes.xyxy, results.boxes.cls):
        name = results.names[int(cls)]
        if name == MY_HP_CLASS:
            x1, y1, x2, y2 = box
            width = x2 - x1
            if width < 100:  # —É–º–æ–≤–Ω–∞ –º–µ–∂–∞ –¥–ª—è "–º–∞–ª–æ HP"
                return True
    return False

def is_target_dead(results):
    for cls in results.boxes.cls:
        name = results.names[int(cls)]
        if name == HP_BAR_CLASS:
            return False
    return True

def find_nearest_mob(results):
    mobs = []
    for box, cls in zip(results.boxes.xyxy, results.boxes.cls):
        name = results.names[int(cls)]
        if name == TARGET_CLASS:
            center = get_center(box)
            dist = abs(center[0] - SCREEN_CENTER_X) + abs(center[1] - SCREEN_CENTER_Y)
            mobs.append((dist, center))
    if mobs:
        mobs.sort(key=lambda x: x[0])
        return mobs[0][1]  # –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –Ω–∞–π–±–ª–∏–∂—á–æ–≥–æ
    return None

def run_bot():
    while True:
        image = grab_screen()
        results = detect_objects(image)

        # –Ø–∫—â–æ HP –Ω–∏–∑—å–∫–∏–π ‚Äî –ø'—î–º–æ –±–∞–Ω–∫—É
        if is_my_hp_low(results):
            print("üß™ –ú–∞–ª–æ HP ‚Üí –ø º—î–º–æ –±–∞–Ω–∫—É")
            send("1")
            time.sleep(1)
            continue

        # –Ø–∫—â–æ —Ü—ñ–ª—å —É–±–∏—Ç–∞ ‚Äî –∑–±–∏—Ä–∞—î–º–æ –ª—É—Ç
        if is_target_dead(results):
            print("üí∞ –¶—ñ–ª—å –º–µ—Ä—Ç–≤–∞ ‚Üí –∑–±–∏—Ä–∞—î–º–æ –ª—É—Ç")
            send("F5")
            time.sleep(1)
            continue

        # –ó–Ω–∞–π—Ç–∏ –Ω–∞–π–±–ª–∏–∂—á–æ–≥–æ –º–æ–±–∞
        mob_coords = find_nearest_mob(results)
        if mob_coords:
            dx = mob_coords[0] - SCREEN_CENTER_X
            dy = mob_coords[1] - SCREEN_CENTER_Y

            print(f"üéØ –ú–æ–± –∑–Ω–∞–π–¥–µ–Ω–æ ‚Üí —Ä—É—Ö –º–∏—à—ñ ({dx}, {dy}) + –∞—Ç–∞–∫–∞")
            send(f"MOVE {dx} {dy}")
            time.sleep(0.2)
            send("F3")  # –∞—Ç–∞–∫–∞
            time.sleep(1)
        else:
            print("üîç –ú–æ–±—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ...")
            time.sleep(1)
